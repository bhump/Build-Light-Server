# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

stages:

  - stage: Build
    displayName: Build and Zip
    jobs:
    - job: zipProjectFiles
      displayName: Build Express Server
      pool:
        vmImage: 'ubuntu-latest'
      steps:

        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              # Write your commands here
      
              echo 'Hello world'
      
              ls

        - task: NodeTool@0
          inputs:
            versionSpec: 10.16.0
          displayName: Install Node & Yarn
        - script: |
            cd BuildApp
            npm install
            yarn install

        - task: ArchiveFiles@2
          displayName: Zip App
          inputs:
            rootFolderOrFile: 'BuildApp'
            includeRootFolder: true
            archiveType: 'zip'
            archiveFile: '$(Build.ArtifactStagingDirectory)/server.zip'
            replaceExistingArchive: true

        - task: PublishBuildArtifacts@1
          displayName: Publish Artifact
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'server-drop'
            publishLocation: 'Container'
            
  - stage: Deploy
    displayName: Deploy to Raspberry Pi Zero
    dependsOn: Build
    jobs:
    - deployment: deployToPiZero
      displayName: Deploy to Raspberry Pi Zero
      pool:
        vmImage: 'ubuntu-latest'
      environment: Development
      strategy:
        runOnce:
          deploy:
            steps:
              - task: DownloadPipelineArtifact@2
                displayName: Download Drop
                inputs:
                  buildType: 'current'
                  artifactName: 'server-drop'
                  downloadPath: '$(System.ArtifactsDirectory)/server-drop'
              
              - task: Bash@3
                displayName: Unzip
                inputs:
                  targetType: 'inline'
                  script: |
                    set -e
      
                    echo $(System.ArtifactsDirectory)
                    
                    echo "unzip server.zip"
                    
                    unzip $(System.ArtifactsDirectory)/server-drop/server.zip -d $(System.ArtifactsDirectory)/server-drop/deploy
              
              # - task: DownloadSecureFile@1
              #   name: envFile
              #   displayName: Download Env File
              #   inputs:
              #     secureFile: '.env'

              - task: Bash@3
                displayName: Add Env File
                inputs:
                  targetType: 'inline'
                  script: |

                    ls
                    echo "changing directory"
                    cd $(System.ArtifactsDirectory)/server-drop/deploy
                    
                    echo "current .env file"
                    cat .env
                    echo "end of current .env file"

                    echo "writing new values to .env"
                    echo "LS_TOKEN=wu63wfmqjhrnsl3lic4p6c6tg3f5cgwsmxi4cbrw6y5vl6rersvq">>.env
                    echo "LS_URL=\"https://dev.azure.com/lonelysasquatch/roasted/_apis/build/builds?=1&api-version=5.1"\">>.env
                    echo "PORT=3001">>.env
                    echo "finished writing new values to .env"

                    echo "writing out .env file"
                    cat .env
                    echo "finished writing out .env file"

                    ls -a
                    echo "navigation back to server directory"
                    cd ..
                    ls
                    cd ..
                    ls

              - task: ArchiveFiles@2
                inputs:
                  rootFolderOrFile: '$(System.ArtifactsDirectory)/server-drop/deploy'
                  includeRootFolder: false
                  archiveType: 'zip'
                  archiveFile: '$(Build.ArtifactStagingDirectory)/server-drop/deploy.zip'
                  replaceExistingArchive: true

              - task: CopyFilesOverSSH@0
                displayName: 'Copy Files to SSH'
                inputs:
                  sshEndpoint: 'raspberrypizero'
                  sourceFolder: '$(System.ArtifactsDirectory)/server-drop'
                  contents: 'deploy.zip'
                  targetFolder: 'Documents'
                  readyTimeout: '20000'
              
              - task: SSH@0
                inputs:
                  sshEndpoint: 'raspberrypizero'
                  runOptions: 'inline'
                  inline: |
                    cd Documents
                    
                    #remove old deploy folder
                    rm -r deploy
                    
                    unzip deploy.zip -d deploy
                    
                    cd deploy/BuildApp
                    
                    # npm start
                  readyTimeout: '20000'
